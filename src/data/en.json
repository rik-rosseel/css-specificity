{
  "congratulation": "Congratulation!",
  "credits": "<p>Made by <a href='https://twitter.com/smnarnold' target='_blank'>@smnarnold</a> — come say hi!</p><p>Have feedback or questions? Please file an isssue on the <a href='https://github.com/smnarnold/css-specificity' target='_blank'>Github repo</a>.</p>",
  "final-score": "Final score",
  "intro": "<p>What color will the element with the emoji ✋ be?</p>",
  "level": "Level",
  "next-question": "Next question",
  "of": "of",
  "questions-in-random-order": "Try again in shuffle mode",
  "quiz-completed": "Quiz completed",
  "reset": "Reset",
  "score": "Score",
  "selector": "Selector",
  "show-result": "Show result!",
  "slogan": "A fun quiz to learn and practice CSS Specificity.",
  "specificity": "Specificity",
  "title": "CSS Specificity",
  "questions": {
    "tag-vs-class": "A class always takes precedence over an HTML tag.",
    "tag-vs-id": "An id always takes precedence over an HTML tag.",
    "class-vs-id": "An id always takes precedence over a class.",
    "class-vs-class": "If several classes have equivalent specificity, the one written last takes precedence over the others. Since the code is read from top to bottom, the most recent definition wins.", 
    "class-order": "If several classes are identical, they have equivalent specificity. In this case, the one written last has priority over the others. Since the code is read from top to bottom, the most recent definition wins.",     
    "tag-and-class-vs-class": "If several classes have equivalent specificity, if one of them is combined with an HTML tag, the latter takes precedence over the others.",
    "class-and-class-vs-id": "The score of the two classes is added. However, a specificity of two classes <em>(20pts)</em> is not sufficient in order to exceed the specificity of an id <em>(100pts)</em>.",
    "class-and-id-vs-id": "The score of the id and the class adds up. Thus giving this selector priority.",
    "tag-ancestor-and-tag-vs-class": "Although the specificity of the two HTML tags adds up, their total is not sufficient to exceed the specificity of a class.", 
    "class-vs-style": "Inline styles have high specificity making them difficult to override later. Use them in moderation.",
    "id-vs-style": "Inline styles have high specificity making them difficult to overwrite subsequently <em> (even with an id) </em>. Use them in moderation.",
    "class-vs-class-ancestor": "The <code>.super</code> selector is the ancestor of the <code>.extra</code> element, not the element itself. Changing it therefore does not affect <code>.extra</code>. <p>For example, if your father changes his style by dyeing his hair, your hair color remains unchanged.</p>",
    "class-separation": "Paste two classes indicates that the element has these two classes simultaneously. <p>While a space indicates that the left element is an ancestor element of the right element. In other words, that two elements are involved and not just one.</p>",
    "class-ancestor-and-class-vs-class": "Adding an ancestor class to a selector makes it more precise and therefore gives it priority over a simple selector.",
    "class-ancestor-order": "A CSS selector is read from right to left. So the targeted element should always be last and not at the beginning.",
    "class-and-class-vs-class": "Le pointage des deux classes s'additionne. Donnant ainsi à ce sélecteur la priorité.",
    "universal-vs-class": "The universal selector <em>(*)</em> has no specificity value, so all other selectors have a higher priority than this one.",
    "class-double-vs-class": "Repeating a class 2x strengthens a selector, doubling its specificity. <p>This technique should only be used as a last resort.</p>"
  }
}